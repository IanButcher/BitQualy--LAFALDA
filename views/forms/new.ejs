<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modificar Formulario</title>
    <link rel="stylesheet" href="/new.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>
    <style>
        /* Estilos adicionales para el Numeric Up Down */
        .percentage-input {
            width: auto;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Panel lateral izquierdo -->
        <aside class="sidebar">
            <div class="logo">
                <img src="/img/Logo BitQualy Blanco.png" alt="Logo BitQualy">
            </div>
            <nav>
                <div class="menu-item">
                    <a href="/empleados"><i class="fas fa-users"></i> Empleados</a>
                </div>
                <div class="menu-item">
                    <a href="/evaluadores"><i class="fas fa-user-tie"></i> Evaluadores</a>
                </div>
                <div class="menu-item">
                    <a href="/reguladores"><i class="fas fa-clipboard-check"></i> Reguladores</a>
                </div>
                <div class="gestion-section">
                    <a href="#" class="dropdown-btn" id="dropdown-toggle"><i class="fas fa-tasks"></i> GESTIÓN <br> EVALUACIONES <i class="fas fa-chevron-down"></i></a>
                    <div class="dropdown-container" id="dropdown-content" style="display: none;">
                        <div class="menu-item">
                            <a href="/evaluaciones"><i class="fas fa-file-alt"></i> Evaluaciones</a>
                        </div>
                        <div class="menu-item">
                            <a href="/formularios"><i class="fas fa-list-alt"></i> Formularios</a>
                        </div>
                    </div>
                </div>
            </nav>
        </aside>

        <!-- Panel principal -->
        <div class="main-content">
            <div class="header">
                <div class="user-info">
                    <img src="/img/user-image.png" alt="User Image">
                    <span>Carina Campo | Rol: Recursos Humanos</span>
                </div>
            </div>

            <div class="modify-form-section">
                <h2>Crear Formulario</h2>

                <!-- Formulario para editar las preguntas y opciones -->
                <!-- Formulario para editar las preguntas y opciones -->
                <div class="form-editor">
                    <h3>Editor de Preguntas</h3>

                    <form id="form-modification" method="POST" action="/formularios/save-form">
                        <div class="form-group">
                            <label for="titulo">Título del Formulario:</label>
                            <input type="text" id="form-title" name="form-title" value="Autoevaluación" required>
                        </div>

                        <!-- Pregunta dinámica -->
                        <div id="additional-questions"></div>

                        <!-- Botón para agregar nuevas preguntas -->
                        <button type="button" class="btn-add" id="add-question-btn">Añadir Pregunta</button>

                        <div class="modify-buttons">
                            <button type="submit" class="btn-save" id="save-form-btn">Guardar Cambios</button> <!-- Submit button -->
                            <button type="button" class="btn-download" id="download-pdf-btn">Descargar PDF</button> <!-- PDF download button -->
                            <a href="/formularios" class="btn-cancel">Cancelar</a>
                        </div>
                    </form>
                </div>

                <!-- Vista previa del formulario -->
                <div class="preview-section">
                    <h3>Vista Previa del Formulario</h3>
                    <iframe id="preview-frame" src="" width="100%" height="400" frameborder="0" style="display: none;"></iframe>
                </div>
            </div>
        </div>
    </div>

    <script>
        
    document.getElementById('dropdown-toggle').addEventListener('click', function () {
        const dropdownContent = document.getElementById('dropdown-content');
        if (dropdownContent.style.display === 'block') {
            dropdownContent.style.display = 'none';
        } else {
            dropdownContent.style.display = 'block';
        }
    });

        let questionCount = 1;

        const addQuestionBtn = document.getElementById('add-question-btn');
        const additionalQuestions = document.getElementById('additional-questions');

        addQuestionBtn.addEventListener('click', () => {
            const questionNumber = questionCount++;

            const newQuestion = `
                <div class="form-group" id="question-group-${questionNumber}">
                    <label for="question${questionNumber}">Pregunta ${questionNumber}:</label>
                    <input type="text" id="question${questionNumber}" name="question${questionNumber}" required>

                    <!-- Descripción de la pregunta -->
                    <label for="description${questionNumber}">Descripción:</label>
                    <textarea id="description${questionNumber}" name="description${questionNumber}"></textarea>

                    <!-- Porcentaje -->
                    <label for="percentage${questionNumber}">Porcentaje:</label>
                    <input type="number" class="percentage-input" id="percentage${questionNumber}" name="percentage${questionNumber}" min="0" max="100" required oninput="updateColor(${questionNumber}), maxPorcentage(${questionNumber}) ">

                    <!-- Tipo de pregunta -->
                    <label for="type${questionNumber}">Tipo de Pregunta:</label>
                    <select name="type${questionNumber}" id="type${questionNumber}" onchange="toggleOptions(${questionNumber})">
                        <option value="texto">Texto</option>
                        <option value="multiple">Opción Múltiple</option>
                        <option value="checkbox">Checkbox</option>
                    </select>

                    <!-- Opciones dinámicas -->
                    <div class="options-group" id="options${questionNumber}" style="display:none;">
                        <div id="options-container-${questionNumber}">
                            <div class="option-item">
                                <label>Opción 1:</label>
                                <input type="text" name="option${questionNumber}_1">
                            </div>
                        </div>
                        <button type="button" class="btn-add-option" onclick="addOption(${questionNumber})">Añadir Opción</button>
                    </div>

                    <!-- Botón para eliminar pregunta -->
                    <button type="button" class="btn-delete" onclick="deleteQuestion(${questionNumber})">Eliminar Pregunta</button>
                </div>
            `;
            additionalQuestions.insertAdjacentHTML('beforeend', newQuestion);
        });

        // Función para agregar opciones dinámicas
        function addOption(questionNumber) {
            const optionsContainer = document.getElementById(`options-container-${questionNumber}`);
            const optionCount = optionsContainer.querySelectorAll('.option-item').length + 1;

            const newOption = `
                <div class="option-item">
                    <label>Opción ${optionCount}:</label>
                    <input type="text" name="option${questionNumber}_${optionCount}">
                    <button type="button" class="btn-delete-option" onclick="deleteOption(this)">Eliminar Opción</button>
                </div>
            `;
            optionsContainer.insertAdjacentHTML('beforeend', newOption);
        }

        // Función para eliminar una pregunta
        function deleteQuestion(questionNumber) {
            const questionGroup = document.getElementById(`question-group-${questionNumber}`);
            questionGroup.remove();
        }

        // Función para eliminar una opción
        function deleteOption(optionElement) {
            optionElement.parentElement.remove();
        }

        // Mostrar u ocultar opciones dependiendo del tipo de pregunta
        function toggleOptions(questionNumber) {
            const typeSelect = document.getElementById(`type${questionNumber}`);
            const optionsGroup = document.getElementById(`options${questionNumber}`);

            if (typeSelect.value === 'multiple' || typeSelect.value === 'checkbox') {
                optionsGroup.style.display = 'block';
            } else {
                optionsGroup.style.display = 'none';
            }
        }

        function TotalMaxPorcentaje() {
        const percentageInputs = document.querySelectorAll('.percentage-input');
        let total = 0;

        // Sumar todos los valores de porcentaje
        percentageInputs.forEach(input => {
            if (!isNaN(value)) {
                total += value;
            }
        });
        if (total > 100) {
            alert("La suma total de los porcentajes no puede exceder el 100%.");
            return false;  
        }
        return true;  
    }
        // que el porcentage de cada pregunta no supere a 100 o este por debajo de 0
        function maxPorcentage(questionNumber) {
        const percentageInput = document.getElementById(`percentage${questionNumber}`);
        const value = parseFloat(percentageInput.value);
        if (!isNaN(value)) {
            if (value > 100) {
                alert("El porcentaje no puede ser mayor a 100%.");
                percentageInput.value = 0;  
            }
            else {
                if (TotalMaxPorcentaje() === false)
                percentageInput.value = 0;  
            }
        } else {
            
        }
    }
        
        // Actualizar el color del porcentaje
        function updateColor(questionNumber) {
            const percentageInput = document.getElementById(`percentage${questionNumber}`)
            const value = percentageInput.value

            if (value < 10) {
                percentageInput.style.backgroundColor = "#f8d7da"; // Red
            } else if (value <= 20) {
                percentageInput.style.backgroundColor = "#f5c6cb"; // Light Red
            } else if (value <= 30) {
                percentageInput.style.backgroundColor = "#ffeeba"; // Yellow
            } else if (value <= 40) {
                percentageInput.style.backgroundColor = "#fff3cd"; // Light Yellow
            } else if (value <= 50) {
                percentageInput.style.backgroundColor = "#d4edda"; // Green
            } else {
                percentageInput.style.backgroundColor = "#c3e6cb"; // Dark Green
            }
        }

        // Función para crear el PDF
        document.getElementById('save-changes-btn').addEventListener('click', (event) => {
            event.preventDefault(); // Prevenir el envío del formulario

            // Crea un nuevo documento PDF
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Título del formulario
            const title = document.getElementById('form-title').value;
            doc.setFontSize(18);
            doc.text(title, 20, 20);

            // Agregar tabla con preguntas
            const columns = ["Pregunta", "Descripción", "Porcentaje"];
            const rows = [];

            const questions = document.querySelectorAll('input[name^="question"], textarea[name^="description"], input[name^="percentage"]');
            for (let i = 0; i < questions.length; i += 3) {
                const questionText = questions[i].value;
                const description = questions[i + 1].value;
                const percentage = questions[i + 2].value;

                rows.push([questionText, description, percentage]);
            }

            // Crear tabla en el PDF
            doc.autoTable(columns, rows, { startY: 30 });

            // Guardar PDF en la vista previa
            const pdfBlob = doc.output('blob');
            const pdfUrl = URL.createObjectURL(pdfBlob);

            // Mostrar PDF en la vista previa
            const previewFrame = document.getElementById('preview-frame');
            previewFrame.src = pdfUrl;
            previewFrame.style.display = 'block';

            // Guardar PDF
            doc.save(`${title}.pdf`);
        });
    </script>
</body>
</html>
