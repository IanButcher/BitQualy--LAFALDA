<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modificar Formulario</title>
    <link rel="stylesheet" href="/update.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.13/jspdf.plugin.autotable.min.js"></script>
    <link rel="icon" type="image/png" href="https://ugc.production.linktr.ee/mj5IciCyRk2puUukygYa_kmwAn8AE84X4N3S5?io=true&size=avatar-v3_0">

    
</head>
<body>
    <nav> <%- include('../partials/navbar') %> </nav>>
        

        <!-- Panel principal -->
        <div class="main-content">
            <div class="header">
                <div class="user-info">
                    <img src="/img/user-image.png" alt="User Image">
                    <span>Carina Campo | Rol: Recursos Humanos</span>
                </div>
            </div>

            <div class="modify-form-section">
                <h2>Crear Formulario</h2>

                <!-- Formulario para editar las preguntas y opciones -->
                <!-- Formulario para editar las preguntas y opciones -->
                <div class="form-editor">
                    <h3>Editor de Preguntas</h3>

                    <form id="form-modification" method="POST" action="/formularios/<%= formulario._id %>?_method=PUT">
                        <div class="form-group">
                            <label for="titulo">Título del Formulario:</label>
                            <input type="text" id="form-title" name="form-title" value="<%= formulario.titulo %>" required>
                        </div>
                        <!-- Input para guardar preguntas borradas -->
                        <input type="hidden" id="deleted-questions" name="deleted-questions">
                        <!-- Pregunta dinámica -->
                        <div id="additional-questions">
                            <% let questionIndex = 1 %>
                            <% for (pregunta of formulario.questions) {%>
                                <div class="form-group" id="question-group-<%= pregunta._id %>">
                                    <label for="question<%= pregunta._id %>">Pregunta <%= questionIndex %>:</label>
                                    <br>
                                    <input type="text" id="question<%= pregunta._id %>" name="question<%= pregunta._id %>" value="<%= pregunta.titulo %>" required>
                                     <!-- Descripción de la pregunta -->
                                     <br>
                                    <label for="description<%= pregunta._id %>">Descripción:</label>
                                    <br>
                                    <textarea id="description<%= pregunta._id %>" name="description<%= pregunta._id %>"><%= pregunta.descripcion %></textarea>
                                    <!-- Porcentaje -->
                                    <br>
                                    <label for="percentage<%= pregunta._id %>">Porcentaje:</label>
                                    <br>
                                    <input type="number" class="percentage-input" id="percentage${questionNumber}" name="percentage<%= pregunta._id %>" min="0" max="100" required oninput="updateColor('<%= pregunta.porcentaje %>')" value="<%= pregunta.porcentaje %>">
                                    <!-- Tipo de pregunta -->
                                    <label for="type<%= pregunta._id %>">Tipo de Pregunta:</label>
                                    <select name="type<%= pregunta._id %>" id="type<%= pregunta._id %>" onchange="toggleOptions('<%= pregunta._id %>')">
                                        <option value="texto" <%= pregunta.tipo === 'texto' ? 'selected' : '' %>>Texto</option>
                                        <option value="multiple" <%= pregunta.tipo === 'multiple' ? 'selected' : '' %>>Opción Múltiple</option>
                                        <option value="checkbox" <%= pregunta.tipo === 'checkbox' ? 'selected' : '' %>>Checkbox</option>
                                    </select>
                                    <!-- Opciones dinámicas -->
                                    <% let opcionIndex = 1 %>
                                    <div class="options-group" id="options<%= pregunta._id %>" style="display: <%= (pregunta.tipo === 'multiple' || pregunta.tipo === 'checkbox') ? 'block' : 'none' %>;">
                                        <div id="options-container-<%= pregunta._id %>">
                                            <% for (opcion of pregunta.options) {%>
                                                <div class="option-item">
                                                    <label>Opción <%= opcionIndex %>:</label>
                                                    <input type="text" name="option<%= pregunta._id %>_<%= opcionIndex %>" value="<%= opcion %>"> <!-- Use correct value for option -->
                                                </div>
                                                <% opcionIndex++ %>
                                            <% } %>
                                        </div>
                                        <button type="button" class="btn-add-option" onclick="addOption('<%= pregunta._id %>')">Añadir Opción</button>
                                    </div>
                                    <br>
                                    <br>
                                    <!-- Botón para eliminar pregunta -->
                                    <button type="button" class="btn-delete" onclick="deleteQuestion('<%= pregunta._id %>')">Eliminar Pregunta</button>
                                </div>
                                <% questionIndex++ %>
                            <% } %>

                        </div>

                        <!-- Botón para agregar nuevas preguntas -->
                        <button type="button" class="btn-add" id="add-question-btn">Añadir Pregunta</button>

                        <div class="modify-buttons">
                            <button type="submit" class="btn-save" id="save-form-btn">Guardar Cambios</button> <!-- Submit button -->
                            <button type="button" class="btn-download" id="download-pdf-btn">Descargar PDF</button> <!-- PDF download button -->
                            <a href="/formularios" class="btn-cancel">Cancelar</a>
                        </div>
                    </form>
                </div>


                <!-- Vista previa del formulario -->
                <div class="preview-section">
                    <h3>Vista Previa del Formulario</h3>
                    <iframe id="preview-frame" src="" width="100%" height="400" frameborder="0" style="display: none;"></iframe>
                </div>
            </div>
        </div>
    </div>

    <script>
        
        let questionCount = 1

        const addQuestionBtn = document.getElementById('add-question-btn');
        const additionalQuestions = document.getElementById('additional-questions');

        addQuestionBtn.addEventListener('click', () => {
            const questionNumber = questionCount++;

            const newQuestion = `
                <div class="form-group" id="question-group-${questionNumber}">
                    <label for="question${questionNumber}">Nueva Pregunta ${questionNumber}:</label>
                    <input type="text" id="question${questionNumber}" name="question${questionNumber}" required>

                    <!-- Descripción de la pregunta -->
                    <label for="description${questionNumber}">Descripción:</label>
                    <textarea id="description${questionNumber}" name="description${questionNumber}"></textarea>

                    <!-- Porcentaje -->
                    <label for="percentage${questionNumber}">Porcentaje:</label>
                    <input type="number" class="percentage-input" id="percentage${questionNumber}" name="percentage${questionNumber}" min="0" max="100" required oninput="updateColor(${questionNumber})">

                    <!-- Tipo de pregunta -->
                    <label for="type${questionNumber}">Tipo de Pregunta:</label>
                    <select name="type${questionNumber}" id="type${questionNumber}" onchange="toggleOptions(${questionNumber})">
                        <option value="texto">Texto</option>
                        <option value="multiple">Opción Múltiple</option>
                        <option value="checkbox">Checkbox</option>
                    </select>

                    <!-- Opciones dinámicas -->
                    <div class="options-group" id="options${questionNumber}" style="display:none;">
                        <div id="options-container-${questionNumber}">
                            <div class="option-item">
                                <label>Opción 1:</label>
                                <input type="text" name="option${questionNumber}_1">
                            </div>
                        </div>
                        <button type="button" class="btn-add-option" onclick="addOption(${questionNumber})">Añadir Opción</button>
                    </div>

                    <!-- Botón para eliminar pregunta -->
                    <button type="button" class="btn-delete" onclick="deleteQuestion(${questionNumber})">Eliminar Pregunta</button>
                </div>
            `
            additionalQuestions.insertAdjacentHTML('beforeend', newQuestion);
        });

        // Función para agregar opciones dinámicas
        function addOption(questionNumber) {
            const optionsContainer = document.getElementById(`options-container-${questionNumber}`);
            const optionCount = optionsContainer.querySelectorAll('.option-item').length + 1;

            const newOption = `
                <div class="option-item">
                    <label>Opción ${optionCount}:</label>
                    <input type="text" name="option${questionNumber}_${optionCount}">
                    <button type="button" class="btn-delete-option" onclick="deleteOption(this)">Eliminar Opción</button>
                </div>
            `;
            optionsContainer.insertAdjacentHTML('beforeend', newOption);
        }

        // Función para eliminar una pregunta
        const deletedQuestions = [];  
        function deleteQuestion(questionId) {
            const questionGroup = document.getElementById(`question-group-${questionId}`);
            if (questionGroup) {
                questionGroup.remove();  
                deletedQuestions.push(questionId);  
            }
            document.getElementById('deleted-questions').value = deletedQuestions.join(',');
        }

        // Función para eliminar una opción
        function deleteOption(optionElement) {
            optionElement.parentElement.remove();
        }

        // Mostrar u ocultar opciones dependiendo del tipo de pregunta
        function toggleOptions(questionNumber) {
            const typeSelect = document.getElementById(`type${questionNumber}`);
            const optionsGroup = document.getElementById(`options${questionNumber}`);

            if (typeSelect.value === 'multiple' || typeSelect.value === 'checkbox') {
                optionsGroup.style.display = 'block';
            } else {
                optionsGroup.style.display = 'none';
            }
        }

    // Actualizar el color del porcentaje
    function updateColor(id) {
        const percentageInput = document.getElementById(`percentage${id}`);
        const value = percentageInput.value;

        if (value < 10) {
            percentageInput.style.backgroundColor = "#f8d7da"; // Red
        } else if (value <= 20) {
            percentageInput.style.backgroundColor = "#f5c6cb"; // Light Red
        } else if (value <= 30) {
            percentageInput.style.backgroundColor = "#ffeeba"; // Yellow
        } else if (value <= 40) {
            percentageInput.style.backgroundColor = "#fff3cd"; // Light Yellow
        } else if (value <= 50) {
            percentageInput.style.backgroundColor = "#d4edda"; // Green
        } else {
            percentageInput.style.backgroundColor = "#c3e6cb"; // Dark Green
        }
    }

        // Función para crear el PDF
        document.getElementById('save-changes-btn').addEventListener('click', (event) => {
            event.preventDefault(); // Prevenir el envío del formulario

            // Crea un nuevo documento PDF
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Título del formulario
            const title = document.getElementById('form-title').value;
            doc.setFontSize(18);
            doc.text(title, 20, 20);

            // Agregar tabla con preguntas
            const columns = ["Pregunta", "Descripción", "Porcentaje"];
            const rows = [];

            const questions = document.querySelectorAll('input[name^="question"], textarea[name^="description"], input[name^="percentage"]');
            for (let i = 0; i < questions.length; i += 3) {
                const questionText = questions[i].value;
                const description = questions[i + 1].value;
                const percentage = questions[i + 2].value;

                rows.push([questionText, description, percentage]);
            }

            // Crear tabla en el PDF
            doc.autoTable(columns, rows, { startY: 30 });

            // Guardar PDF en la vista previa
            const pdfBlob = doc.output('blob');
            const pdfUrl = URL.createObjectURL(pdfBlob);

            // Mostrar PDF en la vista previa
            const previewFrame = document.getElementById('preview-frame');
            previewFrame.src = pdfUrl;
            previewFrame.style.display = 'block';

            // Guardar PDF
            doc.save(`${title}.pdf`);
        });

                





        function updateColor(id) {
            const percentageInput = document.getElementById(`percentage${id}`);
            const value = Number(percentageInput.value); // Asegúrate de que el valor sea un número

            // Limpiar clases de color anteriores
            percentageInput.classList.remove('red-border', 'blue-border', 'green-border');

            // Aplicar la clase correspondiente
            if (value < 20) {
                percentageInput.classList.add('red-border');
            } else if (value >= 20 && value < 70) {
                percentageInput.classList.add('blue-border');
            } else if (value >= 70) {
                percentageInput.classList.add('green-border');
            }
        }
    </script>
</body>
</html>
